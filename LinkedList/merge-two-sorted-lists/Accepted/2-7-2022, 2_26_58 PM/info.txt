{"id":636667607,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1644265618,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/636667607/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"43.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n    \n        if(list1 == null) return list2;\n        if(list2 ==null) return list1;\n        \n        ListNode merge = new ListNode(-1);\n        ListNode head = merge;\n        while(list1 != null && list2 != null){\n            if(list1.val < list2.val){\n                merge.next = list1;\n                list1 = list1.next;\n                \n            }\n           else \n           {\n               merge.next = list2;\n            \n                list2 = list2.next;\n                \n            }\n            \n            merge = merge.next;\n        }\n        \n        if(list1 != null){\n          merge.next = list1;  \n            \n            \n        }else{\n            merge.next = list2;\n        }\n        \n        return head.next;\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false}