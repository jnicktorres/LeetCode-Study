{"id":646531651,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645508071,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/646531651/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        ListNode ret = new ListNode();\n        ListNode head = ret;\n        if(list1 == null && list2 == null){\n            return null;\n        }\n        else if(list1 == null && list2 != null){\n            return list2;\n        }\n        else if(list1 != null && list2 == null){\n            return list1;\n        }\n        else{\n            \n            while(list1 != null && list2 != null){\n                \n                if(list1.val < list2.val){\n                 ret.next = list1;\n                 list1 = list1.next;\n                    \n                }\n                else{\n                    ret.next = list2;\n                    list2 = list2.next\n                    \n                }\n                ret = ret.next;           \n        }\n            \n        if(list1 == null){\n            ret.next = list2;\n        }\n            else {\n                merge.next == list1;\n            }\n        \n            return head;\n        \n    }\n}","compare_result":null,"title_slug":"merge-two-sorted-lists","has_notes":false}