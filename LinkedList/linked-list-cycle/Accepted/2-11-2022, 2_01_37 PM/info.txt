{"id":639466332,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1644609697,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/639466332/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"45.9 MB","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head == null){\n            return false;\n        }\n        \n        ListNode slow = head;\n        ListNode fast = head.next;\n        \n        while(fast != null && fast.next != null){\n            if(fast == slow){\n                return true;\n            }\n            fast = fast.next.next;\n            slow = slow.next;\n        }\n        \n        return false;\n        \n    }\n}","compare_result":"111111111111111111111","title_slug":"linked-list-cycle","has_notes":false}