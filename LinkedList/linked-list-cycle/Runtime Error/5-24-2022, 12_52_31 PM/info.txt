{"id":706362086,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653414751,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/706362086/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode(int x) {\n *         val = x;\n *         next = null;\n *     }\n * }\n */\npublic class Solution {\n    public boolean hasCycle(ListNode head) {\n        if(head == null){\n            return false;\n        }\n            ListNode slow = head;\n            ListNode fast = head.next;\n            \n            while(fast.next !=null){\n                if(slow == fast){\n                    return true;\n                }\n                slow = slow.next;\n                fast = fast.next.next;\n                \n            }\n            return false;\n        }\n    }\n","compare_result":"110000000000000000000","title_slug":"linked-list-cycle","has_notes":false}