{"id":708421706,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653667939,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/708421706/","is_pending":"Not Pending","title":"Middle of the Linked List","memory":"41.5 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode middleNode(ListNode head) {\n        if(head == null){\n            return null;\n        }\n        int length = 1 ;\n        ListNode copy = head;\n        while(head != null){\n            head = head.next;\n            length++;\n        }\n        \n        \n        if(length % 2 != 0){\n           length = (length/2) + 1; \n        }\n        else{\n            length = length/2;\n        }\n        int i = 1;\n        while(i != length){\n            \n            copy = copy.next;\n            i++;\n        }\n        System.out.println(length);\n        return copy;\n        \n    }\n}","compare_result":"111111111111111111111111111111111111","title_slug":"middle-of-the-linked-list","has_notes":false}