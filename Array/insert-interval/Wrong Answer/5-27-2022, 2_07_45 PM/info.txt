{"id":708521888,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653678465,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/708521888/","is_pending":"Not Pending","title":"Insert Interval","memory":"N/A","code":"class Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        \n        ArrayList<int[]> merged = new ArrayList();\n        \n        for(int i = 0; i < intervals.length;i++){\n            if(newInterval[1] < intervals[i][0]){\n                merged.add(newInterval);\n                return append(merged, i, intervals);\n            }\n            else if(newInterval[0] > intervals[i][1]){\n                merged.add(intervals[i]);\n            }\n            else{\n                newInterval[0] = Math.min(newInterval[0], intervals[i][0]);\n                newInterval[1] = Math.max(newInterval[1], intervals[i][0]);\n            }\n        }\n        \n        merged.add(newInterval);\n        return merged.toArray(new int[merged.size()][2]);\n    }\n    \n    private int[][] append(ArrayList<int[]> merged, int pos, int[][] intervals){\n        for(int i = pos; i < intervals.length;i++){\n            merged.add(intervals[i]);\n        }   \n        \n        return merged.toArray(new int[merged.size()][2]);\n    }\n}","compare_result":"101011110011110011100010011111110111011111111101101111111011111110111111111010001100111001111011101111110111101110110111110111100011111110011110011100111101","title_slug":"insert-interval","has_notes":false}