{"id":708522126,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653678492,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/708522126/","is_pending":"Not Pending","title":"Insert Interval","memory":"47.3 MB","code":"class Solution {\n    public int[][] insert(int[][] intervals, int[] newInterval) {\n        \n        ArrayList<int[]> merged = new ArrayList();\n        \n        for(int i = 0; i < intervals.length;i++){\n            if(newInterval[1] < intervals[i][0]){\n                merged.add(newInterval);\n                return append(merged, i, intervals);\n            }\n            else if(newInterval[0] > intervals[i][1]){\n                merged.add(intervals[i]);\n            }\n            else{\n                newInterval[0] = Math.min(newInterval[0], intervals[i][0]);\n                newInterval[1] = Math.max(newInterval[1], intervals[i][1]);\n            }\n        }\n        \n        merged.add(newInterval);\n        return merged.toArray(new int[merged.size()][2]);\n    }\n    \n    private int[][] append(ArrayList<int[]> merged, int pos, int[][] intervals){\n        for(int i = pos; i < intervals.length;i++){\n            merged.add(intervals[i]);\n        }   \n        \n        return merged.toArray(new int[merged.size()][2]);\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval","has_notes":false}