{"id":648304315,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645739861,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/648304315/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals,(a,b) -> Compare(a[0],b[0]));\n        List<int[]> ret = new ArrayList();\n        \n        int[] curr = intervals[0];\n        ret.add(curr);\n        \n        for(int i : intervals){\n            int currBeg = curr[0];\n            int currEnd = curr[1];\n            int iBeg = i[0];\n            int iEnd = i[1];\n            \n            if(currBeg >= iBeg){\n                \n                currEnd = Math.max(currEnd,iEnd);\n            }\n            else{\n                curr = i;\n                ret.add(curr);\n                \n            }\n            \n            \n        }\n        \n        return ret.asArray(new int[ret.size()][]);\n        \n        \n    }\n}","compare_result":null,"title_slug":"merge-intervals","has_notes":false}