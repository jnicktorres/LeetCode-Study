{"id":759098006,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1659020937,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/759098006/","is_pending":"Not Pending","title":"Merge Intervals","memory":"55.5 MB","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n     \n     ArrayList<int[]> merged = new ArrayList();\n     Arrays.sort(intervals,(a,b) ->                 Integer.compare(a[0],b[0]));\n     int[] cur = intervals[0];\n     merged.add(cur);\n     \n        for(int[] interval : intervals){\n            if(cur[1] >= interval[0]){\n                cur[1] = Math.max(interval[1], cur[1]);\n            }\n            else{\n                cur = interval;\n                merged.add(cur);\n            }\n        }\n        \n        \n        return merged.toArray(new int[merged.size()][2]);\n        \n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals","has_notes":false}