{"id":646090684,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645461434,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/646090684/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        List<int[]> merged = new ArrayList();\n        \n        int[] curr = intervals[0];\n        merged.add(curr);\n        for(int[] interval : intervals){\n         \n            int currBeg = curr[0];\n            int currEnd = curr[1];\n            int interBeg = interval[0];\n            int interEnd = interval[1];\n            \n            if(currEnd>=interBeg){\n                curr[1] = Math.max(currEnd,interEnd);\n            }\n            else{\n                curr = interval;\n                merged.add(curr);\n            }\n        }\n         return merged.toArray(new int[merged.size()][]);\n        }\n    }\n","compare_result":"1111111000100000000000000000000001000000000000000000000000000000000000000000000000000000001000000000001000000010110000000000000000001000001000101000000000000000000000000","title_slug":"merge-intervals","has_notes":false}