{"id":648304668,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645739924,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/648304668/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public int[][] merge(int[][] intervals) {\n        \n        Arrays.sort(intervals,(a,b) -> Integer.compare(a[0],b[0]));\n        List<int[]> ret = new ArrayList();\n        \n        int[] curr = intervals[0];\n        ret.add(curr);\n        \n        for(int[] i : intervals){\n            int currBeg = curr[0];\n            int currEnd = curr[1];\n            int iBeg = i[0];\n            int iEnd = i[1];\n            \n            if(currEnd >= iBeg){\n                \n                currEnd = Math.max(currEnd,iEnd);\n            }\n            else{\n                curr = i;\n                ret.add(curr);\n                \n            }\n            \n            \n        }\n        \n        return ret.toArray(new int[ret.size()][]);\n        \n        \n    }\n}","compare_result":"0011001100111001000000000000001010000000000001001001000000000000000001000001010000000001101000000010000000010010101100000000000000000000001000000100000000000000000000110","title_slug":"merge-intervals","has_notes":false}