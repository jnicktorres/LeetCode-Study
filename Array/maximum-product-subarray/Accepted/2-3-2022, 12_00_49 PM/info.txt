{"id":633825645,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643911249,"status":10,"status_display":"Accepted","runtime":"235 ms","url":"/submissions/detail/633825645/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"42.6 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int max = nums[0];\n        int currprod = 1;\n        if(nums.length == 1){\n            return max;\n        }\n        \n        for(int i = 0;i<nums.length;i++){\n            int currnum = nums[i];\n            for(int j = i + 1; j < nums.length; j++){\n                \n                max = Math.max(currnum,max);\n                currnum *= nums[j];\n                \n                \n              \n            }\n            max = Math.max(currnum,max);\n            \n        }\n        return max;\n    }\n}\n\n\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false}