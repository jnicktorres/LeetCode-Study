{"id":638155570,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1644443594,"status":10,"status_display":"Accepted","runtime":"284 ms","url":"/submissions/detail/638155570/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"45.7 MB","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int n = nums.length;\n        int max = nums[0];\n        for(int i = 0; i < n;i++){\n            int currNumber = nums[i];\n            for(int j = i+1; j < n;j++){\n                max = Math.max(currNumber, max);\n                currNumber *= nums[j];\n                \n            }\n            \n            max = Math.max(currNumber,max);\n        }\n        \n        return max;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-product-subarray","has_notes":false}