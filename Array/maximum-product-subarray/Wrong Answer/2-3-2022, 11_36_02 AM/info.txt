{"id":633810509,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643909762,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/633810509/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int max = nums[0];\n        \n        \n        for(int i = 1;i<nums.length;i++){\n            nums[i] = Math.max(nums[i], nums[i] * nums[i-1]);\n            max = Math.max(nums[i],max);\n            \n        }\n        return max;\n    }\n}","compare_result":"11111111111110101101000000111110111110110101111110011101011011111111011011111111111010101011110101010110100010010011110010101001111000011011000100101000110011100101100011010001000000000001","title_slug":"maximum-product-subarray","has_notes":false}