{"id":633808576,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643909576,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/633808576/","is_pending":"Not Pending","title":"Maximum Product Subarray","memory":"N/A","code":"class Solution {\n    public int maxProduct(int[] nums) {\n        int max = 0;\n        \n        if(nums.length == 1){\n            return nums[0];\n        }\n        \n        \n        for(int i = 1;i<nums.length;i++){\n            nums[i] = nums[i] * nums[i-1];\n            max = Math.max(nums[i],max);\n            \n        }\n        return max;\n    }\n}","compare_result":"11111111101101110011000111111110000010011010100001111011010101110111101001011100010111000001000101000001011101111010111100101011001000100000110101101011111001111010010011110100000001010011","title_slug":"maximum-product-subarray","has_notes":false}