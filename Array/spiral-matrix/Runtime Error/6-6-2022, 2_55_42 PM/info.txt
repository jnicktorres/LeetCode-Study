{"id":715982925,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1654545342,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/715982925/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"N/A","code":"class Solution {\n    public List<Integer> spiralOrder(int[][] matrix) {\n        \n        List<Integer> n = new ArrayList();\n        int rowbeg = 0;\n        int rowend = matrix[0].length - 1;\n        int colbeg = 0;\n        int colend = matrix.length-1;\n        int c = 0;\n        while(c < matrix.length * matrix[0].length){\n            \n            for(int i = colbeg; i <= colend;i++){\n                n.add(matrix[rowbeg][i]);\n                c++;\n            }\n            rowbeg++;\n            \n            for(int i = rowbeg; i <= rowend;i++){\n                n.add(matrix[i][colend]);\n                c++;\n            }\n            colend--;\n            for(int i = colend; i >= colbeg;i--){\n                n.add(matrix[rowend][i]);\n                c++;\n            }\n            rowend--;\n            for(int i = rowend; i >= rowbeg;i--){\n                n.add(matrix[i][colbeg]);\n                c++;\n            }\n            colbeg++;\n        }\n        \n        return n;\n    }\n}","compare_result":"10000000000000000000000","title_slug":"spiral-matrix","has_notes":false}