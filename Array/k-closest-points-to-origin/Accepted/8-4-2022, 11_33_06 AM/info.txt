{"id":765185807,"lang":"java","lang_name":"Java","time":"6 months, 4 weeks","timestamp":1659630786,"status":10,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/765185807/","is_pending":"Not Pending","title":"K Closest Points to Origin","memory":"118.1 MB","code":"class Solution {\n    public int[][] kClosest(int[][] points, int k) {\n       \n        PriorityQueue<int[]> q = new PriorityQueue<>(new Comparator<int[]>(){\n            public int compare(int[] a, int[] b){\n                return (a[0]*a[0] + a[1] *a[1]) - (b[0] * b[0] + b[1]*b[1]);\n            }\n            \n        });\n        \n        for(int i =0; i < points.length;i++){\n            q.add(points[i]);\n        }\n        \n        int[][] ret = new int[k][2];\n        \n        for(int i = 0; i < k; i++){\n            ret[i] = q.poll();\n        }\n        return ret;\n            \n            \n        }\n    }\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"k-closest-points-to-origin","has_notes":false}