{"id":712919483,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1654187821,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/712919483/","is_pending":"Not Pending","title":"Spiral Matrix II","memory":"41.7 MB","code":"class Solution {\n    public int[][] generateMatrix(int n) {\n        \n                int[][] matrix = new int[n][n];\n        \n        // Edge Case\n        if (n == 0) {\n            return matrix;\n        }\n        \n        // Normal Case\n        int rowStart = 0;\n        int rowEnd = n-1;\n        int colStart = 0;\n        int colEnd = n-1;\n        int num = 1; //change\n        \n        while (rowStart <= rowEnd && colStart <= colEnd) {\n            for (int i = colStart; i <= colEnd; i ++) {\n                matrix[rowStart][i] = num ++; //change\n            }\n            rowStart ++;\n            \n            for (int i = rowStart; i <= rowEnd; i ++) {\n                matrix[i][colEnd] = num ++; //change\n            }\n            colEnd --;\n            \n            for (int i = colEnd; i >= colStart; i --) {\n                if (rowStart <= rowEnd)\n                    matrix[rowEnd][i] = num ++; //change\n            }\n            rowEnd --;\n            \n            for (int i = rowEnd; i >= rowStart; i --) {\n                if (colStart <= colEnd)\n                    matrix[i][colStart] = num ++; //change\n            }\n            colStart ++;\n        }\n        \n        return matrix;\n            \n    }\n}","compare_result":"11111111111111111111","title_slug":"spiral-matrix-ii","has_notes":false}