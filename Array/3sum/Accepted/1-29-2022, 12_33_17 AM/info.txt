{"id":630032033,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1643437997,"status":10,"status_display":"Accepted","runtime":"40 ms","url":"/submissions/detail/630032033/","is_pending":"Not Pending","title":"3Sum","memory":"58.8 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> list = new LinkedList();\n        Arrays.sort(nums);\n        \n        for(int i = 0; i < nums.length-2;i++){\n            if(i == 0 || (i > 0 && nums[i] != nums[i-1])){\n                int left = i+1;\n                int right = nums.length-1;\n                int sum = 0-nums[i];\n                \n                while(left < right){\n                    if(nums[left] + nums[right] == sum){\n                        \n                       list.add(Arrays.asList(nums[i],nums[left],nums[right]));\n                        while(left < right && nums[right] == nums[right-1]) right--;\n                        while(left < right && nums[left] == nums[left+1]) left++;\n                        left++;\n                        right--;\n                    }\n                    \n                    else if(nums[left] + nums[right] < sum){\n                        left++;\n                    }\n                    else{\n                        right--;\n                    }\n                }\n                \n            }\n        }\n        \n           return list;\n        }\n}\n    \n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n            \n            \n            \n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}