{"id":629433407,"lang":"java","lang_name":"Java","time":"1 year, 1 month","timestamp":1643351244,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/629433407/","is_pending":"Not Pending","title":"3Sum","memory":"59.1 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        List<List<Integer>> ls = new LinkedList();\n        \n        Arrays.sort(nums);\n        \n        for(int i = 0; i<nums.length -2; i++){\n            if(i == 0 || (i > 0 && nums[i] != nums[i-1])){\n                int left = i+1;\n                int right = nums.length-1;\n                int sum = 0 - nums[i];\n                while(left<right){\n                    if(nums[left] + nums[right] == sum){\n                        ls.add(Arrays.asList(nums[i],nums[left],nums[right]));\n                    while( left < right && nums[left] == nums[left+1]) left++;\n                    while( left < right && nums[left] == nums[right-1]) right--;\n                    left++;\n                    right--;                              \n                }\n                else if(nums[left] + nums[right] > sum){\n                    right--;\n                }\n                                                  \n                 else{\n                     left++;\n                 }                                 \n            }\n                       \n            \n        }\n        \n        \n        }\n        return ls;\n        \n    \n}\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}