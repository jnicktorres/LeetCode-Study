{"id":631410064,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643608196,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/631410064/","is_pending":"Not Pending","title":"3Sum","memory":"46.5 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        int n = nums.length;\n        List<List<Integer>> ls = new LinkedList();\n        Arrays.sort(nums);\n        \n        for(int i = 0; i < n -2;i++){\n            if(i ==0 ||(i>0 && nums[i] != nums[i-1])){\n                int left = i+1;\n                int right = n-1;\n                int sum = 0 -nums[i];\n            \n                while(left < right){\n                    if(nums[right] + nums[left] == sum){\n                        ls.add(Arrays.asList(nums[i],nums[left],nums[right]));\n                        while(left < right && nums[left] == nums[left+1]) left++;\n                        while(left < right && nums[right] == nums[right-1]) right--;        \n                        left++;\n                        right--;                  \n                    }\n                    else if(nums[right] + nums[left] < sum){\n                        left++;                 \n                    } else{\n                        \n                        right--;\n                    }               \n                    \n                }\n                         \n                        \n            }\n                        \n        }\n                               return ls;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}