{"id":645081851,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645337288,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/645081851/","is_pending":"Not Pending","title":"3Sum","memory":"58 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n        int n = nums.length;\n        List<List<Integer>> ret = new LinkedList();\n        Arrays.sort(nums);\n        for(int i =0 ; i < n - 2;i++){\n            if(i == 0 || (i> 0 && nums[i] != nums[i-1])){\n                int left = i + 1;\n                int right = n-1;\n                int sum = 0 - nums[i];\n                \n                while(left < right){\n                    if(nums[left] + nums[right] == sum){\n                        ret.add(Arrays.asList(nums[left],nums[right],nums[i]));\n                        while(left<right && nums[left] == nums[left+1]) left++;\n                        while(left<right && nums[right] == nums[right-1]) right--;\n                        left++;\n                        right--;\n                        \n                    }\n                    else if(nums[left] + nums[right] < sum){\n                        left++;\n                    }\n                    else{\n                       right--; \n                    \n                    }\n                    \n                    \n                }\n            }\n        }\n                \n                return ret;\n            }\n            \n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false}