{"id":633469694,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643867561,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/633469694/","is_pending":"Not Pending","title":"3Sum","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n         List<List<Integer>> list = new LinkedList();\n         Arrays.sort();\n        \n        \n        for(int i = 0; i < nums.length - 2; i++){\n            if(i==0 || (i>0 && nums[i] != nums[i-1])){\n              \n                int left = i+1;\n                int right = nums.length-1;\n                int sum = 0 -nums[i];\n                \n                while(left<right){\n                    if(nums[left] + nums[right] == sum){\n                        list.add(Arrays.asList(nums[i],nums[left],nums[right]));\n                        while(left<right && nums[left] == nums[left+1]) left++;\n                        while(left<right && nums[right] == nums[right-1]) left--;\n                        left++;\n                        right--;\n                        \n                    }\n                    else if(nums[left] + nums[right] < sum){\n                        left++;                     \n                        \n                   }\n                    \n                    e;se{\n                        \n                        right--;\n                    }\n                    \n                }\n                \n                \n                \n                \n                \n            }\n            \n            \n        }\n        \n        return list;\n    }\n}","compare_result":null,"title_slug":"3sum","has_notes":false}