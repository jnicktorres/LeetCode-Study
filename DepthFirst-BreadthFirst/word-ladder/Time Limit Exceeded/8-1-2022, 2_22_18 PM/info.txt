{"id":762623508,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1659381738,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/762623508/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        if(!wordList.contains(endWord)) {\n            return 0;\n        }\n         Set<String> reached = new HashSet<String>();\n        reached.add(beginWord);\n        \n        int distance = 1;\n        while (!reached.contains(endWord)) {\n            Set<String> toAdd = new HashSet<String>();\n            for (String each : reached) {\n                for (int i = 0; i < each.length(); i++) {\n                    char[] chars = each.toCharArray();\n                    for (char ch = 'a'; ch <= 'z'; ch++) {\n                        chars[i] = ch;\n                        String word = new String(chars);\n                        if (wordList.contains(word)) {\n                            toAdd.add(word);\n                            wordList.remove(word);\n                        }\n                    }\n                }\n            }\n            distance++;\n            System.out.println(toAdd.size());\n            if (toAdd.isEmpty()) {\n                \n        \n                return 0;\n            }\n            reached = toAdd;\n        }\n        return distance;\n    }\n}","compare_result":"11111111111111111111111111111111110000000000000000","title_slug":"word-ladder","has_notes":false}