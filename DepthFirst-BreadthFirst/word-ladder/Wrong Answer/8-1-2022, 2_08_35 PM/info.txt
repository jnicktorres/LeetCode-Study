{"id":762613268,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1659380915,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/762613268/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution {\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\n        Set<String> reached = new HashSet<String>();\n        reached.add(beginWord);\n        wordList.add(endWord);\n        int distance = 1;\n        while(!reached.contains(endWord)){\n            Set<String> toAdd = new HashSet<String>();\n            for(String each : reached){\n                for(int i = 0; i < each.length();i++){\n                char[] chars = each.toCharArray();\n                    for(char ch = 'a';ch <= 'z';ch++){\n                        chars[i] = ch;\n                        String word = new String(chars);\n                        if(wordList.contains(word)){\n                            toAdd.add(word);\n                            wordList.remove(word);\n                        }\n                    }\n                }\n            }\n                \n                distance++;\n                if(toAdd.size() == 0) return 0;\n                \n                reached = toAdd;\n                \n        \n        }\n        \n    \n      return distance;\n    }\n}","compare_result":"10111111011111110111111111111111110000000000000000","title_slug":"word-ladder","has_notes":false}