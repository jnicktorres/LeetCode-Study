{"id":638868113,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1644530530,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/638868113/","is_pending":"Not Pending","title":"Same Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSameTree(TreeNode p, TreeNode q) {\n    if(p == null && q==null){\n        return true;\n    }\n       if (p == null && q != null){\n           return false;\n       } \n        if (q == null && p != null){\n           return false;\n       }\n        \n        if(p.val != q.val){\n            return false;\n        }\n        \n        TreeNode head = p;\n        TreeNode head2 = q;\n        while(p != null && q!= null){\n        if(p.val != q.val){\n            return false;\n        }\n        else{\n            p = p.left;\n            q = q.left;\n            \n        }\n        }\n        if (p == null && q != null){\n           return false;\n       } \n        if (q == null && p != null){\n           return false;\n       }\n        p = head;\n        q = head2;\n        while(p != null && q!= null){\n        if(p.val != q.val){\n            return false;\n        }\n        else{\n            p = p.right;\n            q = q.right;\n            \n        }\n        \n    }\n        \n        return true;\n}\n}","compare_result":"111111110101111111111011111111111111111111111111111111101101","title_slug":"same-tree","has_notes":false}