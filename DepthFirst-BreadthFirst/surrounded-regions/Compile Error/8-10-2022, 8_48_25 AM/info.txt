{"id":770235742,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1660139305,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/770235742/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"N/A","code":"class Solution {\n    int[][] dirs = {{1,0},{0,1},{-1,0},{0,-1}};\n    public void solve(char[][] board) {\n        int h = board[0].length;\n        int l = board.length;\n        \n        for(int i = 0; i < l; i++){\n            for(int j = 0; j < h;j++){\n                if(board[i][j] == 'O'){\n                    dfs(board, i, j);\n                }\n            }\n        }\n        \n        \n    }\n    \n    public void dfs(char[][] board, int row, int col){\n        if(row =< 0 || col =< 0 || row >= board.length - 1 || col >= board[0].length -1 || board[row][col] == 'X' ){\n            \n            return;\n                                                                                                                   }       \n        board[row][col] = 'X';\n        \n        \n        for(int[] dir : dirs){\n            int x = row + dir[0];\n            int y = col + dir[1];\n            dfs(board, x,y);       \n        }   \n           \n           \n           \n    }\n}","compare_result":null,"title_slug":"surrounded-regions","has_notes":false}