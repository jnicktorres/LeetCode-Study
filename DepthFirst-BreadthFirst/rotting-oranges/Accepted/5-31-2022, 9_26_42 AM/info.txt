{"id":711312101,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1654007202,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/711312101/","is_pending":"Not Pending","title":"Rotting Oranges","memory":"41.8 MB","code":"class Solution {\n    public int orangesRotting(int[][] grid) {\n     \n        int freshoranges = 0;\n        Queue<int[]> q = new LinkedList<>();\n        \n        \n            for(int i = 0; i < grid.length;i++){\n                for(int j = 0; j < grid[0].length;j++){\n                    if(grid[i][j] == 2){\n                        q.offer(new int[]{i,j});\n                    }\n                    else if(grid[i][j] == 1){\n                        freshoranges++;\n                    }\n                }\n            }\n        \n        if(freshoranges == 0) return 0;\n        int[][] dirs = {{1,0},{-1,0},{0,1},{0,-1}};\n        int count = 0;\n        while(!q.isEmpty()){\n            count++;\n            int size = q.size();\n            for(int i = 0; i < size;i++){\n                int[] curr = q.poll();\n                for(int[] dir : dirs){\n                    int x = curr[0] + dir[0];\n                    int y = curr[1] + dir[1];\n                    if(x < 0 || y < 0 || x >= grid.length || y >= grid[0].length || grid[x][y] == 0 || grid[x][y] == 2) continue;\n                    grid[x][y] = 2;\n                    q.offer(new int[] {x,y});\n                    freshoranges--;\n                }\n            }\n        }\n        \n        return freshoranges == 0 ? count-1 : -1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotting-oranges","has_notes":false}