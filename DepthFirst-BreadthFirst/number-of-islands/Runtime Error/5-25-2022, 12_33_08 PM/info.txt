{"id":707071943,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653499988,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/707071943/","is_pending":"Not Pending","title":"Number of Islands","memory":"N/A","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int islands = 0;\n        \n        for(int i = 0; i < grid.length;i++){\n            for(int j = 0; j < grid[0].length;j++){\n                if(grid[i][j] == '1'){\n                    \n                    dfs(grid,i,j);\n                    islands++;\n                }\n                \n            }\n        }\n        return islands;\n        \n    }\n    \n    \n    \n    \n    public void dfs(char[][] grid, int row, int col){\n        if(row < 0 || col < 0 || col>grid[0].length || row>grid.length){\n            return;\n        }\n        \n        if(grid[row][col] != '1'){\n            return;\n        }\n        \n        grid[row][col] = '0';\n        \n        dfs(grid,row+1,col);\n        dfs(grid,row-1,col);\n        dfs(grid,row,col+1);\n        dfs(grid,row,col-1);\n        }\n}","compare_result":"1000000000000000000000000000000000000000000000000","title_slug":"number-of-islands","has_notes":false}