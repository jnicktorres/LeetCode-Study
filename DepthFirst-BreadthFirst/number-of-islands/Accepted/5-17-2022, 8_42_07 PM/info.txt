{"id":701778009,"lang":"java","lang_name":"Java","time":"9 months, 2 weeks","timestamp":1652838127,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/701778009/","is_pending":"Not Pending","title":"Number of Islands","memory":"58.1 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int islands = 0;\n        \n        for(int i = 0; i < grid.length;i++){\n            for(int j = 0; j <grid[0].length;j++){\n                 if(grid[i][j] == '1'){\n                     dfs(i,j,grid);\n                     islands++;\n                 }\n            }\n        }\n        return islands;\n        \n    }\n    \n    \n    private void dfs(int row, int col, char[][] grid){\n        \n        if(row < 0 || col < 0 || row > grid.length-1 || col > grid[0].length-1){\n            return;\n        }\n        \n        if(grid[row][col] == '0'){\n            \n            return;\n        }\n        \n        grid[row][col] = '0';\n        \n        dfs(row+1,col,grid);\n        dfs(row-1,col,grid);\n        dfs(row,col+1,grid);\n        dfs(row,col-1,grid);\n            \n            \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false}