{"id":718193345,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1654788577,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/718193345/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"42.5 MB","code":"class Solution {\n    public int lengthOfLongestSubstring(String s) {\n        if(s.length() == 0){\n            return 0;\n       }\n        else if(s.length() == 1){\n            return 1;\n        }\n        int max = 0;\n        HashMap<Character, Integer> set = new HashMap<Character,Integer>();\n        \n        for(int i =0, j = 0; i < s.length();i++){\n            if(set.containsKey(s.charAt(i))){\n                j = Math.max(j, set.get(s.charAt(i))+1);\n            }\n            set.put(s.charAt(i),i);\n            max = Math.max(max,i-j+1);\n        }\n        \n        return max;\n    }\n}","compare_resulttitle_slug":"longest-substring-without-repeating-characters","has_notes":false}