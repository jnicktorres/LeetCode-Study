{"id":646526728,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645507591,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/646526728/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if(root == null){\n            return false;\n        }\n        \n        else if(isSameTree(root,subRoot)){\n            return true;\n        }\n        else{\n            return isSameTree(root.left,subRoot) || isSameTree(root.right,subRoot);\n        }\n    }\n    \n    private boolean isSameTree(TreeNode s, TreeNode t){\n        if(s == null || t == null){\n            return s== null && t == null;\n        }\n        else if(s.val == t.val){\n            \n            return isSameTree(s.left,t.left) && isSameTree(s.right,t.right);\n        }\n        \n        else{\n            \n          return false;  \n        }\n               \n    }\n}","compare_result":"11111111111001111111111111111111100000000000000000000001000100110010000010000010000000000001000000000000100000001111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"subtree-of-another-tree","has_notes":false}