{"id":639475393,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1644610947,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/639475393/","is_pending":"Not Pending","title":"Subtree of Another Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isSubtree(TreeNode root, TreeNode subRoot) {\n        if(root == null){\n            return false;\n        }\n        else if(isSameTree(root,subRoot)){\n            return true;\n        }\n        else{\n            return isSubtree(root.left,subRoot) || isSubtree(root.right,subRoot) ;\n            \n        }\n    }\n        \n        \n    \n        private boolean isSameTree(TreeNode s, TreeNode t){\n            if(s== null || t == null){\n                root==null && subRoot == null;\n            }\n            else if(s.val == t.val){\n                return isSameTree(s.left,t.left) && isSameTree(s.right, t.right);\n            }\n            else{\n                return false;\n            }\n            \n        }\n        \n    }\n","compare_result":null,"title_slug":"subtree-of-another-tree","has_notes":false}