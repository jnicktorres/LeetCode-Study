{"id":708503156,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653676446,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/708503156/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"42.7 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max= 0;\n    public int diameterOfBinaryTree(TreeNode root) {\n       if(root == null){\n           return 0;\n       } \n        \n        dfs(root);\n        return max;\n        \n    }\n    \n    private int dfs(TreeNode node){\n        if(node == null){\n            return 0;\n        }\n        int left = dfs(node.left);\n        int right = dfs(node.right);\n        \n        max = Math.max(max, left + right);\n        return Math.max(left,right) + 1;\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false}