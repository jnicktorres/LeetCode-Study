{"id":647859840,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645676108,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/647859840/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    int max;\n    public int maxPathSum(TreeNode root) {\n        max = Integer.MIN_VALUE;\n        \n        pathSum(root);\n        \n        return max;\n    }\n    private int pathSum(TreeNode node){\n        if(node == null){\n            return null;\n        }\n        int left = Math.max(0,pathSum(node.left));\n        int right = Math.max(0,pathSum(node.right));\n        \n        max = Math.max(max, node.val + left + right);\n        \n        return Math.max(left,right) + node.val;\n        \n    }\n}","compare_result":null,"title_slug":"binary-tree-maximum-path-sum","has_notes":false}