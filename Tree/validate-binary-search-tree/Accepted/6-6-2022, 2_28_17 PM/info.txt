{"id":715967024,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1654543697,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/715967024/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"43.3 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        if(root == null){\n            return true;\n        }\n        \n        return valid(root,null,null);            \n    }\n    \n    private boolean valid(TreeNode node, Integer min, Integer max){\n        if(node == null){\n            return true;\n        }\n        else if((min != null && node.val <= min) || (max != null && node.val >= max)){\n            \n            return false;\n        }\n        \n        return valid(node.left,min,node.val) && valid(node.right,node.val,max);\n        \n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}