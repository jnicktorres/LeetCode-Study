{"id":712286633,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1654113325,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/712286633/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"44.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return isValidBST(root, null, null);\n    }\n    \n    public boolean isValidBST(TreeNode root, Integer min, Integer max) {\n        if (root == null) \n            return true; \n        if ((max != null && root.val >= max) || (min != null && root.val <= min)) \n            return false; \n        return isValidBST(root.left, min, root.val) && isValidBST(root.right, root.val, max);\n    }\n    \n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false}