{"id":712279759,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1654112583,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/712279759/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    \n    public boolean isValidBST(TreeNode root) {\n          \n       return dfs(root);\n         \n    }\n    \n    private boolean dfs(TreeNode node){\n        if(node == null){\n            return false;\n        }\n        if((node.left != null && node.left.val >= node.val) || (node.right != null && node.right.val <= node.val )){\n            return false;\n        }\n        dfs(node.left);\n        dfs(node.right);\n        \n        return true;\n    }\n}","compare_result":"11111111111001001001111111111111111111110110110101011001001111111111111000110101","title_slug":"validate-binary-search-tree","has_notes":false}