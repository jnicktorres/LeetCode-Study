{"id":708388387,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653664166,"status":10,"status_display":"Accepted","runtime":"9 ms","url":"/submissions/detail/708388387/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"49.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n        while (root != null){\n            if(root.val > p.val && root.val > q.val){\n                root = root.left;\n                }\n            else if(root.val < p.val && root.val <q.val){\n                root = root.right;\n        }\n                else{\n                    return root;\n                }\n        \n    }\n                \n                return root;\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}