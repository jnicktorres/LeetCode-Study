{"id":706370258,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653415499,"status":10,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/706370258/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"49.6 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null){\n            return null;\n        }\n        \n        if(root.val > p.val && root.val > q.val){\n            return lowestCommonAncestor(root.left,p,q);\n        }\n        else if(root.val < p.val && root.val < q.val){\n            return lowestCommonAncestor(root.right,p,q);\n        }\n        else{\n            return root;\n        }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}