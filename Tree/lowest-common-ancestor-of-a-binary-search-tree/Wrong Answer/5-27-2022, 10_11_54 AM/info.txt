{"id":708389713,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653664314,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/708389713/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\n\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        \n        while (root != null){\n            if(root.val < p.val && root.val > q.val){\n                return root;\n                }\n            else if(root.val < p.val && root.val <q.val){\n                root = root.right;\n        }\n                else{\n                    root = root.left;\n                }\n        \n    }\n                \n                return root;\n    }\n}","compare_result":"000000010010000100001100101","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false}