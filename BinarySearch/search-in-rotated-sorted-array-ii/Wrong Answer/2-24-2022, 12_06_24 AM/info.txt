{"id":647919945,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1645682784,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/647919945/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array II","memory":"N/A","code":"class Solution {\n    public boolean search(int[] nums, int target) {\n        \n        \n        int left = 0;\n        int right = nums.length - 1;\n        \n        while(left < right){\n            int mid = left +(right-left)/2;\n            if(nums[mid] == target){\n                return true;\n            }\n            else if(nums[mid] > nums[right]){\n                left = mid + 1;          \n            }\n            else{\n               right = mid;\n            }       \n        }\n        \n        \n        \n        \n            \n        int start = left;\n        left = 0;\n        right = nums.length - 1;\n        \n        if(nums[start] == target){\n            return true;\n        }\n        else if(nums[start] < target){\n            right = start;\n        }\n        else{\n            left = start;\n        }\n        \n        \n        while(left <  right){\n            int mid = left + (right-left)/2;\n             if(nums[mid] == target){\n            return true;\n        }\n        else if(nums[mid] < target){\n            right = start;\n        }\n        else{\n            left = start;\n        }\n    }    \n            \n            return false;\n            \n        }\n        \n    }\n","compare_result":"111111000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array-ii","has_notes":false}