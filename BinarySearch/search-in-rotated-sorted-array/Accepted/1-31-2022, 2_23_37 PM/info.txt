{"id":631810348,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643660617,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/631810348/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"43.1 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int n = nums.length;\n        int left = 0;\n        int right = n-1;\n        \n        \n        while(left < right){\n            int mid = left + (right - left)/2;\n            \n            if(nums[mid] > nums[right]){\n                left = mid + 1;\n                \n            }\n        else{\n            right = mid;\n        }\n    }\n        int start = left;\n        left = 0;\n        right = n -1;\n        if(target>= nums[start] && target <= nums[right]){\n            left = start;\n            \n        }\n        else{\n            right = start;\n        }\n        \n        while(left <= right){\n        int mid = left +(right - left)/2;\n        if (nums[mid] == target){\n            return mid;\n        }        \n        else if(nums[mid] < target){\n            left = mid+1;\n            \n        }\n        else{\n            right = mid -1;\n        }\n        \n        }\n        return -1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false}