{"id":747889385,"lang":"java","lang_name":"Java","time":"7 months, 2 weeks","timestamp":1657902096,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/747889385/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"42.4 MB","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int left = 0;\n        int right = nums.length-1;\n        if(nums.length == 0){\n            return -1;\n        }\n        \n        while(left < right){\n            int mid = left + (right - left) / 2;\n            \n            if(nums[mid] > nums[right]){\n                left = mid+1;\n                \n            }\n            else{\n                right = mid;\n            }\n        }\n        \n        int start = left;\n        left = 0;\n        right = nums.length-1;\n        \n        if(target >= nums[start] &&  target <= nums[right]){\n            left = start;\n        }\n        else{\n            right = start;\n        }\n        \n        while(left <= right){\n            int mid = left + (right - left)/2;\n            \n            if(nums[mid] == target){\n                return mid;\n            }\n            else if (nums[mid] > target){\n                right = mid-1;\n            }\n            else{\n                left = mid+1;\n            }                \n            }\n\n        return -1;\n            }\n        }   \n    ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false}