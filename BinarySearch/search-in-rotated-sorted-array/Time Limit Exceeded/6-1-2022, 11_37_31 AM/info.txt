{"id":712160092,"lang":"java","lang_name":"Java","time":"9Â months","timestamp":1654101451,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/712160092/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\n    public int search(int[] nums, int target) {\n        \n        int left = 0; \n        int right = nums.length-1;\n        \n        while(left < right){\n            int mid = left + (right -left) / 2;\n            if(nums[mid] >= nums[right]){\n                left = mid+1;\n            }\n            else{\n                right = mid;\n            }\n        }\n        \n        int start = left;\n        left = 0; \n        right = nums.length-1;\n        \n        if(target>= nums[start] && target <= nums[right]){\n            left = start;\n        }\n        \n            else{\n                right = start;\n            }\n        \n        \n        while(left <= right){\n            int mid  = left + (right-left) /2;\n            if(nums[mid] == target){\n            return mid;    \n            }\n            else if(nums[mid] < target){\n                left = mid + 1;\n            }\n            else{\n                right = mid;\n            }\n        }\n        \n        return -1;\n        \n    }\n}","compare_result":"100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array","has_notes":false}