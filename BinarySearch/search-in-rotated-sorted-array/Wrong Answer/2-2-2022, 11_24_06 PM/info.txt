{"id":633451334,"lang":"java","lang_name":"Java","time":"1Â year","timestamp":1643865846,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/633451334/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\n    public int search(int[] nums, int target) {\n        int n = nums.length;\n        \n        int left = 0;\n        int right = n-1;\n        \n        while(left < right){\n            int mid = left + (right -left) /2;\n            if(nums[mid] > nums[right]){\n                left = mid +1;\n                \n            }\n            else {\n                \n                right = mid;\n            }\n        }\n    \n    \n    int start = left;\n     left = 0;\n     right = n -1;\n    if(target>= nums[start] &&  target <= nums[right]){\n        left = start;\n        \n    }\n    else{\n        \n        right = start;\n    }\n    \n    \n    while(left < right){\n            int mid = left + (right -left) /2;\n            if(nums[mid] == target){\n                \n                return mid;\n                \n            }\n            else if(nums[mid] < target){\n                \n                left = mid +1;\n            }\n            else {\n                \n                right = mid -1;\n            }\n        }\n    return -1;\n    }\n    \n}","compare_result":"011011110110111101110110101111110111101011100000101011101000101011100011111110111010000010101111111101111111111001101110100110111101111101111101001111001111111111011110110010111111111111111110111","title_slug":"search-in-rotated-sorted-array","has_notes":false}