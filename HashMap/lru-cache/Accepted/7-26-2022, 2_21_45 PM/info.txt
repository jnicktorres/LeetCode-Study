{"id":757509260,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1658863305,"status":10,"status_display":"Accepted","runtime":"66 ms","url":"/submissions/detail/757509260/","is_pending":"Not Pending","title":"LRU Cache","memory":"124 MB","code":"class LRUCache {\n    \n    HashMap<Integer,Node> map;\n   final  Node head = new Node();\n   final Node tail = new Node();\n    int cap;\n    \n     public LRUCache(int capacity) {\n     map = new HashMap(capacity);\n     this.cap = capacity;\n     head.next = tail;\n     tail.prev = head;\n    }\n    \n    public int get(int key) {\n        int res = -1;\n        Node node = map.get(key);\n        if(node != null){\n            res = node.val;\n            remove(node);\n            add(node);\n        }\n        \n        return res;\n    }\n    \n    public void put(int key, int value) {\n        Node node = map.get(key);\n        if(node != null){\n            remove(node);\n            node.val = value;\n            add(node);\n        }\n        else{\n            if(map.size() == cap){\n                map.remove(tail.prev.key);\n                remove(tail.prev);\n            }\n            Node newNode = new Node();\n            newNode.key = key;\n            newNode.val = value;\n            add(newNode);\n            map.put(key,newNode);\n        }\n        \n    }\n    \n    public void add(Node node){\n        Node headnext = head.next;\n        node.next = headnext;  \n        headnext.prev = node;\n        head.next = node;\n        node.prev = head;\n        \n                    \n    }\n    \n    public void remove(Node node){\n     Node headnext = node.next;\n     Node prevNode = node.prev;\n        \n     headnext.prev = prevNode;\n     prevNode.next = headnext;  \n    \n    }\n \n    \n}\n\n\npublic class Node{\n     Node next;\n     Node prev;\n     int val;\n     int key;\n }\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache obj = new LRUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"1111111111111111111111","title_slug":"lru-cache","has_notes":false}