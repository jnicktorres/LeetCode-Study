{"id":707798185,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653587592,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/707798185/","is_pending":"Not Pending","title":"Min Stack","memory":"N/A","code":"class MinStack {\n    private Node head;\n    \n    public void push(int val) {\n        if(head == null){\n            head = new Node(val,val,null);\n        }\n            head = new Node(val, Math.min(val,head.min),head);\n            \n    }\n    \n    public void pop() {\n        head = head.next;\n    }\n    \n    public int top() {\n        return head.val;\n    }\n    \n    public int getMin() {\n        return head.min;\n        \n    }\n\n\nprivate class Node{\n    int min;\n    int val;\n    Node next;\n    private Node(int val, int min, Node next){\n        this.min  = min;\n        this.val = val;\n        this.next = next;\n        }\n    }\n}\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack obj = new MinStack();\n * obj.push(val);\n * obj.pop();\n * int param_3 = obj.top();\n * int param_4 = obj.getMin();\n */","compare_result":"1111111110111111111101111101111","title_slug":"min-stack","has_notes":false}