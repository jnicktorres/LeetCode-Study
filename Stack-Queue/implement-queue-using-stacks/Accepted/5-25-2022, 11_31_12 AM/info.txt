{"id":707032481,"lang":"java","lang_name":"Java","time":"9 months, 1 week","timestamp":1653496272,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/707032481/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"41.6 MB","code":"class MyQueue {\n\n    Stack<Integer> s1 = new Stack();\n    Stack<Integer> s2 = new Stack();\n    public MyQueue() {\n        \n    \n    }\n    \n    public void push(int x) {\n        s1.push(x);\n    }\n    \n    public int pop() {\n        \n      peek();\n       return s2.pop();\n        \n    }\n    \n    public int peek() {\n        if (s2.isEmpty()) {\n      while (!s1.isEmpty()) {\n        s2.push(s1.pop());\n      }\n    }\n    \n    return s2.peek();\n      \n    }\n    \n    public boolean empty() {\n        return s1.isEmpty() && s2.isEmpty();\n    }\n            \n    \n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false}