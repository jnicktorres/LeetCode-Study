{"id":740230525,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1657127822,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/740230525/","is_pending":"Not Pending","title":"Subsets","memory":"42.5 MB","code":"class Solution {\n    public List<List<Integer>> subsets(int[] nums) {\n        List<List<Integer>> list = new ArrayList();\n        Arrays.sort(nums);\n        backtrack(list,new ArrayList<>(),nums,0);\n        return list;\n    }\n    \n    private void backtrack( List<List<Integer>> list, List<Integer> tempList, int[] nums, int start){\n        list.add(new ArrayList<>(tempList));\n        for(int i = start; i < nums.length;i++){\n                tempList.add(nums[i]);\n                backtrack(list,tempList,nums,i+1);\n                tempList.remove(tempList.size()-1);\n            }\n        }\n    \n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false}